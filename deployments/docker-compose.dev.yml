version: '3'

networks:

  reverse-proxy-net:
    name: dianomi-reverse-proxy-net

  db-net:
    name: dianomi-db-net

volumes:
  pgdata: {}
  pgadmin: {}

services:
  haproxy:
    image: haproxy:2.6-alpine
    hostname: haproxy
    restart: &RESTART_POLICY ''
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    networks:
      reverse-proxy-net: {}
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro
      - ./ssl:/etc/ssl:ro

  # FRONTEND
  client:
    image: node:18-alpine
    user: 1000:1000
    working_dir: /src
    restart: *RESTART_POLICY
    hostname: client
    command: /bin/sh -c "npm i && npm run dev"
    networks:
      reverse-proxy-net: {}
    volumes:
      - ../website:/src:rw

  # BACKEND
  server:
    image: cosmtrek/air:latest
    hostname: server
    restart: *RESTART_POLICY
    command: -c deployments/air.toml
    user: 1000:1000
    networks:
      reverse-proxy-net: {}
      db-net: {}
    working_dir: /src
    env_file:
      - ../.env
    depends_on:
      - db
    volumes:
      - ../:/src:rw

  # DATABASE
  db:
    image: postgres:15.2-alpine
    restart: *RESTART_POLICY
    hostname: postgres
    networks:
      db-net: {}
    ports:
      - 127.0.0.1:5432:5432/tcp
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
      - ../schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    env_file:
      - ../.env

  pgadmin:
    image: dpage/pgadmin4:6
    restart: *RESTART_POLICY
    hostname: pgadmin
    networks:
      db-net: {}
    ports:
      - 127.0.0.1:8081:80/tcp
    volumes:
      - pgadmin:/var/lib/pgadmin:rw
    env_file:
      - ../.env
    environment:
      GUNICORN_ACCESS_LOGFILE: "/dev/null"
